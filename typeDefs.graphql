  enum PhotoCategory {
    SELFIE
    PORTRAIT
    ACTION
    LANDSCAPE
    GRAPHIC
  }
  
    type AuthPayload { 
    # 認証Mutationのレスポンスとしてのみ使用される。
    token: String!
    user: User!
  }

  # 認証Mutationのレスポンスとしてのみ使用（トークンと認証されたユーザー情報が含まれる。）
  type AuthPayload { 
    token: String!
    user: User!
  }

  type Photos {
    id: ID!
    url: String!
    name: String!
    description: String
    category: PhotoCategory!
  }

  type User {
    githubLogin: ID!
    name: String
    avatar: String
    postedPhotos: [Photo!]
    inPhotos: [Photo!]
  }

  scalar DateTime
  type Photo {
    id: ID!
    url: String!
    name: String!
    description: String
    category: PhotoCategory!
    postedBy: User!
    taggedUsers: [User!]!
    created: DateTime!
  }

  input PostPhotoInput {
    name: String!
    category: PhotoCategory=PORTRAIT
    description: String
  }

  type Query {
    totaPhotos: Int!
    allPhotos(after: DateTime): [Photos!]!
    totalUsers: Int!
    allUsers: [User!]!
  }

  type Mutation {
    postPhoto(input: PostPhotoInput!): Photos!
    githubAuth(code: String!): AuthPayload!
  }
